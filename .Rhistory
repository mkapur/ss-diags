filter(Fleet_name == "S5_EU_ESP_LL") %>%
mutate(model = 'ASPM'),
base_case$cpue %>%
merge(.,nm, by.x = "Fleet_name", by.y = "Current.names") %>%
filter(Fleet_name == "S5_EU_ESP_LL") %>%
mutate(model = 'Base Case')) %>%
mutate(     lower_total = NA, #qnorm(.025, mean = Exp, sd = SE),
upper_total = NA) %>%  #qnorm(.975, mean = Exp, sd = SE)) %>%
select(Yr, Obs, Exp, SE, lower_total, upper_total, model)
cp <- rbind(cp0,
cp0 %>% filter(model == 'ASPM') %>%
mutate(model = 'Observed',
lower_total = exp(log(Obs) + qt(0.025, df = 30) *
SE),
upper_total = exp(log(Obs) + qt(0.975, df = 30) *
SE)))
p2 <- ggplot(cp, aes(x = Yr, y = Exp, color = model)) +
theme_bw() +
theme( panel.grid = element_blank(),
strip.text = element_text(size = 16),
axis.text = element_text(size = 10),
axis.title =  element_text(size = 12),
legend.position = c(0.85,0.15)) +
scale_color_manual(values = c('dodgerblue2','seagreen4', 'black')) +
guides(shape = FALSE, linetype = FALSE,
colour = guide_legend(override.aes =  list(shape = c(NA,NA,1),
linetype = c("solid","solid","blank")))) +
geom_errorbar(data = subset(cp, model == 'Observed'),
aes(x = Yr, ymin = lower_total,
ymax = upper_total,
group = model, color = model)) +
geom_point(data = subset(cp, model == 'Observed'), shape = 1,
aes(x = Yr, y = Obs, color = model)) +
geom_line(data = subset(cp, model != 'Observed'),
aes(x = Yr, y = Exp, color = model), lwd =1.1) +
# scale_y_continuous(limits = c(0,80)) +
scale_x_continuous(limits = c(1989,2016), breaks = seq(1990,2018,10)) +
labs(x = 'Year', y = 'Index CPUE_5', color = "")
p2
nm
nm[4,1] <- "SURVEY_1"
SSplotData(base_case,
fleetnames = c(nm$New.names),
subplot = 1,
fleetcol = grey(seq(0.1,0.5, length.out = length(base_case$FleetNames))))
nm$New.names
nm[4,1] <- "SURVEY_1"
nm
nm[4,2] <- "SURVEY_1"
SSplotData(base_case,
fleetnames = c(nm$New.names),
subplot = 1,
fleetcol = grey(seq(0.1,0.5, length.out = length(base_case$FleetNames))))
nm[4,2] <- "Survey_1"
png("Fig1_dataplotA_MAX.png", res = 720, width = 6, height = 8,
unit = 'in')
SSplotData(base_case,
fleetnames = c(nm$New.names),
subplot = 1,
fleetcol = grey(seq(0.1,0.5, length.out = length(base_case$FleetNames))))
dev.off()
nm
base_case$FleetNames
data.frame("Current.names" = base_case$FleetNames, New.Names = c(paste0("Fishery",1:3),"Survey_1"))
base_case$FleetNames
nm <- data.frame("Current.names" = base_case$FleetNames[1:4], New.Names = c(paste0("Fishery",1:3),"Survey_1"))
nm
## CPUE 5 fits on single plot
cp0 <- bind_rows(aspm$cpue %>%
merge(.,nm, by.x = "Fleet_name", by.y = "Current.names") %>%
filter(Fleet_name == "S5_EU_ESP_LL") %>%
mutate(model = 'ASPM'),
base_case$cpue %>%
merge(.,nm, by.x = "Fleet_name", by.y = "Current.names") %>%
filter(Fleet_name == "S5_EU_ESP_LL") %>%
mutate(model = 'Base Case')) %>%
mutate(     lower_total = NA, #qnorm(.025, mean = Exp, sd = SE),
upper_total = NA) %>%  #qnorm(.975, mean = Exp, sd = SE)) %>%
select(Yr, Obs, Exp, SE, lower_total, upper_total, model)
cp0
aspm$cpue
aspm$cpue %>%
merge(.,nm, by.x = "Fleet_name", by.y = "Current.names")
## CPUE 5 fits on single plot
cp0 <- bind_rows(aspm$cpue %>%
merge(.,nm, by.x = "Fleet_name", by.y = "Current.names") %>%
filter(Fleet_name == "Survey_1") %>%
mutate(model = 'ASPM'),
base_case$cpue %>%
merge(.,nm, by.x = "Fleet_name", by.y = "Current.names") %>%
filter(Fleet_name == "Survey_1") %>%
mutate(model = 'Base Case')) %>%
mutate(     lower_total = NA, #qnorm(.025, mean = Exp, sd = SE),
upper_total = NA) %>%  #qnorm(.975, mean = Exp, sd = SE)) %>%
select(Yr, Obs, Exp, SE, lower_total, upper_total, model)
cp0
aspm$cpue %>%
merge(.,nm, by.x = "Fleet_name", by.y = "Current.names") %>%
filter(Fleet_name == "Survey_1")
aspm$cpue %>%
merge(.,nm, by.x = "Fleet_name", by.y = "Current.names")
## CPUE 5 fits on single plot
cp0 <- bind_rows(aspm$cpue %>%
merge(.,nm, by.x = "Fleet_name", by.y = "Current.names") %>%
filter(Fleet_name == "Medits15_16") %>% ## S5 FOR PREVIOUS
mutate(model = 'ASPM'),
base_case$cpue %>%
merge(.,nm, by.x = "Fleet_name", by.y = "Current.names") %>%
filter(Fleet_name == "Medits15_16") %>%
mutate(model = 'Base Case')) %>%
mutate(     lower_total = NA, #qnorm(.025, mean = Exp, sd = SE),
upper_total = NA) %>%  #qnorm(.975, mean = Exp, sd = SE)) %>%
select(Yr, Obs, Exp, SE, lower_total, upper_total, model)
cp0
cp <- rbind(cp0,
cp0 %>% filter(model == 'ASPM') %>%
mutate(model = 'Observed',
lower_total = exp(log(Obs) + qt(0.025, df = 30) *
SE),
upper_total = exp(log(Obs) + qt(0.975, df = 30) *
SE)))
cp
p2 <- ggplot(cp, aes(x = Yr, y = Exp, color = model)) +
theme_bw() +
theme( panel.grid = element_blank(),
strip.text = element_text(size = 16),
axis.text = element_text(size = 10),
axis.title =  element_text(size = 12),
legend.position = c(0.85,0.15)) +
scale_color_manual(values = c('dodgerblue2','seagreen4', 'black')) +
guides(shape = FALSE, linetype = FALSE,
colour = guide_legend(override.aes =  list(shape = c(NA,NA,1),
linetype = c("solid","solid","blank")))) +
geom_errorbar(data = subset(cp, model == 'Observed'),
aes(x = Yr, ymin = lower_total,
ymax = upper_total,
group = model, color = model)) +
geom_point(data = subset(cp, model == 'Observed'), shape = 1,
aes(x = Yr, y = Obs, color = model)) +
geom_line(data = subset(cp, model != 'Observed'),
aes(x = Yr, y = Exp, color = model), lwd =1.1) +
# scale_y_continuous(limits = c(0,80)) +
scale_x_continuous(limits = c(1989,2016), breaks = seq(1990,2018,10)) +
labs(x = 'Year', y = 'Index CPUE_5', color = "")
p2
p2 <- ggplot(cp, aes(x = Yr, y = Exp, color = model)) +
theme_bw() +
theme( panel.grid = element_blank(),
strip.text = element_text(size = 16),
axis.text = element_text(size = 10),
axis.title =  element_text(size = 12),
legend.position = c(0.85,0.15)) +
scale_color_manual(values = c('dodgerblue2','seagreen4', 'black')) +
guides(shape = FALSE, linetype = FALSE,
colour = guide_legend(override.aes =  list(shape = c(NA,NA,1),
linetype = c("solid","solid","blank")))) +
geom_errorbar(data = subset(cp, model == 'Observed'),
aes(x = Yr, ymin = lower_total,
ymax = upper_total,
group = model, color = model)) +
geom_point(data = subset(cp, model == 'Observed'), shape = 1,
aes(x = Yr, y = Obs, color = model)) +
geom_line(data = subset(cp, model != 'Observed'),
aes(x = Yr, y = Exp, color = model), lwd =1.1) +
# scale_y_continuous(limits = c(0,80)) +
scale_x_continuous(limits = c(1989,2016), breaks = seq(1990,2018,10)) +
labs(x = 'Year', y = 'Index Survey_1', color = "")
stdtable <- aspm$derived_quants[substring(aspm$derived_quants$Label,1,4)=="SSB_",]  %>%
mutate(model = 'ASPM', SSBMSY =  aspm$derived_quants$Value[substring(aspm$derived_quants$Label,1,7)
=="SSB_MSY"]) %>%
bind_rows(.,
base_case$derived_quants[substring(base_case$derived_quants$Label,1,4)=="SSB_",]  %>%
mutate(model = 'Base Case', SSBMSY =  base_case$derived_quants$Value[substring(base_case$derived_quants$Label,1,7)
=="SSB_MSY"]))
# stdtable <- stdtable[tolower(stdtable$Label)!="SSB_unfished",]
# year as the part of the Label string starting with 6th character
stdtable$Yr <- substring(stdtable$Label,5)
# filling in Virgin and Initial years as 2 and 1 years prior to following years
stdtable$Yr[c(1,2,73,74)] <- as.numeric(stdtable$Yr[3])-(2:1)
stdtable$Yr <- as.numeric(stdtable$Yr)
# assume SSB have normal distribution
p3 <-
stdtable %>%
filter(!is.na(Yr)) %>%
group_by(Yr, model) %>%
summarise(Value = Value, SSBMSY = SSBMSY,
lower = Value - 1.96*StdDev,
upper = Value + 1.96*StdDev ) %>%
ggplot(., aes(x = Yr, y = Value, fill = model, color = model)) +
theme_bw() +
theme( panel.grid = element_blank(),
strip.text = element_text(size = 16),
axis.text = element_text(size = 10),
axis.title =  element_text(size = 12),
legend.position = c(0.9,0.15)) +
scale_x_continuous(limits = c(1948,2016), breaks = seq(1950,2016,10)) +
# scale_y_continuous(limits = c(0,2700)) +
scale_color_manual(values = c('dodgerblue2','seagreen4')) +
scale_fill_manual(values = c('dodgerblue2','seagreen4')) +
geom_ribbon(aes(x = Yr, ymin = lower, ymax = upper, group = model, fill = model),
alpha = 0.2 , color = NA) +
geom_point() +
geom_hline(aes(yintercept = SSBMSY, colour = model ),
linetype = 'dashed', lwd = 1.1, alpha = 0.2) +
geom_text(aes(x = 1960, y = SSBMSY+50, label = 'SSB_MSY',color = model), alpha = 0.5) +
guides( color = FALSE,
fill = guide_legend(override.aes =  list(shape = c(19,19),
color = c('dodgerblue2','seagreen4')))) +
labs(x = 'Year', y = 'Spawning Biomass (1000 mt)', fill = "")
p3
stdtable
stdtable %>%
filter(!is.na(Yr)) %>%
group_by(Yr, model) %>%
summarise(Value = Value, SSBMSY = SSBMSY,
lower = Value - 1.96*StdDev,
upper = Value + 1.96*StdDev )
# assume SSB have normal distribution
p3 <-
stdtable %>%
filter(!is.na(Yr)) %>%
group_by(Yr, model) %>%
dplyr::summarise(Value = Value,
SSBMSY = SSBMSY,
lower = Value - 1.96*StdDev,
upper = Value + 1.96*StdDev ) %>%
ggplot(., aes(x = Yr, y = Value, fill = model, color = model)) +
theme_bw() +
theme( panel.grid = element_blank(),
strip.text = element_text(size = 16),
axis.text = element_text(size = 10),
axis.title =  element_text(size = 12),
legend.position = c(0.9,0.15)) +
scale_x_continuous(limits = c(1948,2016), breaks = seq(1950,2016,10)) +
# scale_y_continuous(limits = c(0,2700)) +
scale_color_manual(values = c('dodgerblue2','seagreen4')) +
scale_fill_manual(values = c('dodgerblue2','seagreen4')) +
geom_ribbon(aes(x = Yr, ymin = lower, ymax = upper, group = model, fill = model),
alpha = 0.2 , color = NA) +
geom_point() +
geom_hline(aes(yintercept = SSBMSY, colour = model ),
linetype = 'dashed', lwd = 1.1, alpha = 0.2) +
geom_text(aes(x = 1960, y = SSBMSY+50, label = 'SSB_MSY',color = model), alpha = 0.5) +
guides( color = FALSE,
fill = guide_legend(override.aes =  list(shape = c(19,19),
color = c('dodgerblue2','seagreen4')))) +
labs(x = 'Year', y = 'Spawning Biomass (1000 mt)', fill = "")
stdtable %>%
filter(!is.na(Yr)) %>%
group_by(Yr, model)
head(stdtable)
stdtable$Value
stdtable$val <- stdtable$Value
# assume SSB have normal distribution
p3 <-
stdtable %>%
filter(!is.na(Yr)) %>%
group_by(Yr, model) %>%
dplyr::summarise(Value = val,
SSBMSY = SSBMSY,
lower = Value - 1.96*StdDev,
upper = Value + 1.96*StdDev ) %>%
ggplot(., aes(x = Yr, y = Value, fill = model, color = model)) +
theme_bw() +
theme( panel.grid = element_blank(),
strip.text = element_text(size = 16),
axis.text = element_text(size = 10),
axis.title =  element_text(size = 12),
legend.position = c(0.9,0.15)) +
scale_x_continuous(limits = c(1948,2016), breaks = seq(1950,2016,10)) +
# scale_y_continuous(limits = c(0,2700)) +
scale_color_manual(values = c('dodgerblue2','seagreen4')) +
scale_fill_manual(values = c('dodgerblue2','seagreen4')) +
geom_ribbon(aes(x = Yr, ymin = lower, ymax = upper, group = model, fill = model),
alpha = 0.2 , color = NA) +
geom_point() +
geom_hline(aes(yintercept = SSBMSY, colour = model ),
linetype = 'dashed', lwd = 1.1, alpha = 0.2) +
geom_text(aes(x = 1960, y = SSBMSY+50, label = 'SSB_MSY',color = model), alpha = 0.5) +
guides( color = FALSE,
fill = guide_legend(override.aes =  list(shape = c(19,19),
color = c('dodgerblue2','seagreen4')))) +
labs(x = 'Year', y = 'Spawning Biomass (1000 mt)', fill = "")
stdtable %>%
filter(!is.na(Yr)) %>%
group_by(Yr, model) %>%
dplyr::summarise(Value = val
)
stdtable
tail(stdtable)
subset(stdtable, model == 'Base Case')
subset(stdtable, model == 'Base Case' & Year == '2018')
subset(stdtable, model == 'Base Case' & Yr == '2018')
subset(stdtable, model == 'ASPM' & Yr == '2018')
unique(stdtable$model)
subset(stdtable, model == 'ASPM' & Yr == '2000')
subset(stdtable, model == 'ASPM' & Yr == '2017')
subset(stdtable, model == 'ASPM' & Yr == '2016')
# assume SSB have normal distribution
p3 <-
stdtable %>%
filter(!is.na(Yr) & Yr < 2017) %>%
group_by(Yr, model) %>%
dplyr::summarise(Value = val,
SSBMSY = SSBMSY,
lower = Value - 1.96*StdDev,
upper = Value + 1.96*StdDev ) %>%
ggplot(., aes(x = Yr, y = Value, fill = model, color = model)) +
theme_bw() +
theme( panel.grid = element_blank(),
strip.text = element_text(size = 16),
axis.text = element_text(size = 10),
axis.title =  element_text(size = 12),
legend.position = c(0.9,0.15)) +
scale_x_continuous(limits = c(1948,2016), breaks = seq(1950,2016,10)) +
# scale_y_continuous(limits = c(0,2700)) +
scale_color_manual(values = c('dodgerblue2','seagreen4')) +
scale_fill_manual(values = c('dodgerblue2','seagreen4')) +
geom_ribbon(aes(x = Yr, ymin = lower, ymax = upper, group = model, fill = model),
alpha = 0.2 , color = NA) +
geom_point() +
geom_hline(aes(yintercept = SSBMSY, colour = model ),
linetype = 'dashed', lwd = 1.1, alpha = 0.2) +
geom_text(aes(x = 1960, y = SSBMSY+50, label = 'SSB_MSY',color = model), alpha = 0.5) +
guides( color = FALSE,
fill = guide_legend(override.aes =  list(shape = c(19,19),
color = c('dodgerblue2','seagreen4')))) +
labs(x = 'Year', y = 'Spawning Biomass (1000 mt)', fill = "")
stdtable %>%
filter(!is.na(Yr) & Yr < 2017) %>%
group_by(Yr, model)
stdtable <- aspm$derived_quants[substring(aspm$derived_quants$Label,1,4)=="SSB_",]  %>%
mutate(model = 'ASPM', SSBMSY =  aspm$derived_quants$Value[substring(aspm$derived_quants$Label,1,7)
=="SSB_MSY"]) %>%
bind_rows(.,
base_case$derived_quants[substring(base_case$derived_quants$Label,1,4)=="SSB_",]  %>%
mutate(model = 'Base Case', SSBMSY =  base_case$derived_quants$Value[substring(base_case$derived_quants$Label,1,7)
=="SSB_MSY"]))
# stdtable <- stdtable[tolower(stdtable$Label)!="SSB_unfished",]
# year as the part of the Label string starting with 6th character
stdtable$Yr <- substring(stdtable$Label,5)
stdtable$Yr[c(1,2,73,74)]
stdtable$Yr
stdtable$Yr[!is.numeric( stdtable$Yr)]
as.numeric( stdtable$Yr)
stdtable$Yr <- as.numeric(stdtable$Yr)
stdtable$val <- stdtable$Value
# assume SSB have normal distribution
p3 <-
stdtable %>%
filter(!is.na(Yr) ) %>%
group_by(Yr, model) %>%
dplyr::summarise(Value = val,
SSBMSY = SSBMSY,
lower = Value - 1.96*StdDev,
upper = Value + 1.96*StdDev ) %>%
ggplot(., aes(x = Yr, y = Value, fill = model, color = model)) +
theme_bw() +
theme( panel.grid = element_blank(),
strip.text = element_text(size = 16),
axis.text = element_text(size = 10),
axis.title =  element_text(size = 12),
legend.position = c(0.9,0.15)) +
scale_x_continuous(limits = c(1948,2016), breaks = seq(1950,2016,10)) +
# scale_y_continuous(limits = c(0,2700)) +
scale_color_manual(values = c('dodgerblue2','seagreen4')) +
scale_fill_manual(values = c('dodgerblue2','seagreen4')) +
geom_ribbon(aes(x = Yr, ymin = lower, ymax = upper, group = model, fill = model),
alpha = 0.2 , color = NA) +
geom_point() +
geom_hline(aes(yintercept = SSBMSY, colour = model ),
linetype = 'dashed', lwd = 1.1, alpha = 0.2) +
geom_text(aes(x = 1960, y = SSBMSY+50, label = 'SSB_MSY',color = model), alpha = 0.5) +
guides( color = FALSE,
fill = guide_legend(override.aes =  list(shape = c(19,19),
color = c('dodgerblue2','seagreen4')))) +
labs(x = 'Year', y = 'Spawning Biomass (1000 mt)', fill = "")
p3
# assume SSB have normal distribution
p3 <-
stdtable %>%
filter(!is.na(Yr) ) %>%
group_by(Yr, model) %>%
dplyr::summarise(Value = val,
SSBMSY = SSBMSY,
lower = Value - 1.96*StdDev,
upper = Value + 1.96*StdDev ) %>%
ggplot(., aes(x = Yr, y = Value, fill = model, color = model)) +
theme_bw() +
theme( panel.grid = element_blank(),
strip.text = element_text(size = 16),
axis.text = element_text(size = 10),
axis.title =  element_text(size = 12),
legend.position = c(0.9,0.75)) +
scale_x_continuous(limits = c(1948,2016), breaks = seq(1950,2016,10)) +
# scale_y_continuous(limits = c(0,2700)) +
scale_color_manual(values = c('dodgerblue2','seagreen4')) +
scale_fill_manual(values = c('dodgerblue2','seagreen4')) +
geom_ribbon(aes(x = Yr, ymin = lower, ymax = upper, group = model, fill = model),
alpha = 0.2 , color = NA) +
geom_point() +
geom_hline(aes(yintercept = SSBMSY, colour = model ),
linetype = 'dashed', lwd = 1.1, alpha = 0.2) +
geom_text(aes(x = 1960, y = SSBMSY+50, label = 'SSB_MSY',color = model), alpha = 0.5) +
guides( color = FALSE,
fill = guide_legend(override.aes =  list(shape = c(19,19),
color = c('dodgerblue2','seagreen4')))) +
labs(x = 'Year', y = 'Spawning Biomass (1000 mt)', fill = "")
ggsave(((p1 |p2)/p3),
file = "./Fig10_ASPMPanel_Max.png",
width = 12, height = 12, dpi = 500, unit = 'in')
## Figure 7 Jitter panel plot ----
## two panels, one with likelihood and other with ssb trend from jittered runs
jit <- read.csv("./Jitter_Mako/plots/Likelihoods.csv", sep = " ") %>%
filter(Label == "TOTAL") %>%
reshape2::melt() %>%
filter(!is.na(value)) %>%
dplyr::mutate(idx0 = as.numeric(as.character(sub('replist',"",variable))))
## kapurm@uw.edu Wi 2020
require(dplyr)
require(r4ss)
require(ggplot2)
require(patchwork) #devtools::install_github("thomasp85/patchwork")
require(reshape2)
require(tseries)
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# baseDir <- "./Base_Case/"
baseDir <- "./Max/Reference/"
base_case <- SS_output(baseDir)
## first I saved the Names as a csv
## for use with MAX
nm <- data.frame("Current.names" = base_case$FleetNames[1:4],
New.Names = c(paste0("Fishery",1:3),"Survey_1"))
## Figure 7 Jitter panel plot ----
## two panels, one with likelihood and other with ssb trend from jittered runs
jit <- read.csv("./Jitter_Mako/plots/Likelihoods.csv", sep = " ") %>%
filter(Label == "TOTAL") %>%
reshape2::melt() %>%
filter(!is.na(value)) %>%
dplyr::mutate(idx0 = as.numeric(as.character(sub('replist',"",variable))))
jitbase <- SS_output("./Jitter_Mako/02_SS_NEW_run/")
## Figure 7 Jitter panel plot ----
## two panels, one with likelihood and other with ssb trend from jittered runs
jit <- read.csv("./Jitter_Mako/plots/Likelihoods.csv", sep = " ") %>%
filter(Label == "TOTAL") %>%
reshape2::melt() %>%
filter(!is.na(value)) %>%
dplyr::mutate(idx0 = as.numeric(as.character(sub('replist',"",variable))))
## Figure 7 Jitter panel plot ----
## two panels, one with likelihood and other with ssb trend from jittered runs
jit <- read.csv("./max/plots/Likelihoods.csv", sep = " ") %>%
filter(Label == "TOTAL") %>%
reshape2::melt() %>%
filter(!is.na(value)) %>%
dplyr::mutate(idx0 = as.numeric(as.character(sub('replist',"",variable))))
jitbase <- SS_output("./Jitter_Mako/02_SS_NEW_run/")
p1 <-  jit %>%
mutate(idx = 1:nrow(.)) %>%
ggplot(., aes(x = idx, y = value)) +
theme_bw() +
theme( panel.grid = element_blank(),
strip.text = element_text(size = 16),
axis.text = element_text(size = 10),
axis.title =  element_text(size = 12),
legend.position = 'none') +
geom_hline(yintercept = jitbase$likelihoods_used[[1]][1], col = 'red', linetype = 'dashed') +
geom_point() +
scale_y_continuous(limits = c(0,155)) +
labs(x = "Jitter runs at a converged solution", y = "Total Likelihood")
p1
p1 <-  jit %>%
mutate(idx = 1:nrow(.)) %>%
ggplot(., aes(x = idx, y = value)) +
theme_bw() +
theme( panel.grid = element_blank(),
strip.text = element_text(size = 16),
axis.text = element_text(size = 10),
axis.title =  element_text(size = 12),
legend.position = 'none') +
geom_hline(yintercept = jitbase$likelihoods_used[[1]][1], col = 'red', linetype = 'dashed') +
geom_point() +
# scale_y_continuous(limits = c(0,155)) +
labs(x = "Jitter runs at a converged solution", y = "Total Likelihood")
p1 <-  jit %>%
mutate(idx = 1:nrow(.)) %>%
ggplot(., aes(x = idx, y = value)) +
theme_bw() +
theme( panel.grid = element_blank(),
strip.text = element_text(size = 16),
axis.text = element_text(size = 10),
axis.title =  element_text(size = 12),
legend.position = 'none') +
geom_hline(yintercept = jitbase$likelihoods_used[[1]][1], col = 'red', linetype = 'dashed') +
geom_point() +
# scale_y_continuous(limits = c(0,155)) +
labs(x = "Jitter runs at a converged solution", y = "Total Likelihood")
p1
# jitbase <- SS_output("./Jitter_Mako/02_SS_NEW_run/")
jitbase <- SS_output("./max/reference/")
jit %>%
mutate(idx = 1:nrow(.)) %>%
ggplot(., aes(x = idx, y = value)) +
theme_bw() +
theme( panel.grid = element_blank(),
strip.text = element_text(size = 16),
axis.text = element_text(size = 10),
axis.title =  element_text(size = 12),
legend.position = 'none') +
geom_hline(yintercept = jitbase$likelihoods_used[[1]][1], col = 'red', linetype = 'dashed') +
geom_point() +
# scale_y_continuous(limits = c(0,155)) +
labs(x = "Jitter runs at a converged solution", y = "Total Likelihood")
